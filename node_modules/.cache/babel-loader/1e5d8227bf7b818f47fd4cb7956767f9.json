{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Container = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst Canvas_1 = require(\"./Canvas\");\n\nconst Particles_1 = require(\"./Particles\");\n\nconst Retina_1 = require(\"./Retina\");\n\nconst FrameManager_1 = require(\"./FrameManager\");\n\nconst Options_1 = require(\"../Options/Classes/Options\");\n\nconst Utils_1 = require(\"../Utils\");\n\nclass Container {\n  constructor(id, sourceOptions) {\n    this.id = id;\n    this.sourceOptions = sourceOptions;\n    this.started = false;\n    this.destroyed = false;\n    this.paused = true;\n    this.lastFrameTime = 0;\n    this.pageHidden = false;\n    this.retina = new Retina_1.Retina(this);\n    this.canvas = new Canvas_1.Canvas(this);\n    this.particles = new Particles_1.Particles(this);\n    this.drawer = new FrameManager_1.FrameManager(this);\n    this.noise = {\n      generate: () => {\n        return {\n          angle: Math.random() * Math.PI * 2,\n          length: Math.random()\n        };\n      },\n      init: () => {},\n      update: () => {}\n    };\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.bubble = {};\n    this.repulse = {\n      particles: []\n    };\n    this.attract = {\n      particles: []\n    };\n    this.plugins = new Map();\n    this.drawers = new Map();\n    this.density = 1;\n    this.options = new Options_1.Options();\n\n    for (var _len = arguments.length, presets = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      presets[_key - 2] = arguments[_key];\n    }\n\n    for (const preset of presets) {\n      this.options.load(Utils_1.Plugins.getPreset(preset));\n    }\n\n    const shapes = Utils_1.Plugins.getSupportedShapes();\n\n    for (const type of shapes) {\n      const drawer = Utils_1.Plugins.getShapeDrawer(type);\n\n      if (drawer) {\n        this.drawers.set(type, drawer);\n      }\n    }\n\n    if (this.sourceOptions) {\n      this.options.load(this.sourceOptions);\n    }\n\n    this.eventListeners = new Utils_1.EventListeners(this);\n  }\n\n  play(force) {\n    const needsUpdate = this.paused || force;\n\n    if (this.paused) {\n      this.paused = false;\n    }\n\n    if (needsUpdate) {\n      for (const [, plugin] of this.plugins) {\n        if (plugin.play) {\n          plugin.play();\n        }\n      }\n\n      this.lastFrameTime = performance.now();\n    }\n\n    this.draw();\n  }\n\n  pause() {\n    if (this.drawAnimationFrame !== undefined) {\n      Utils_1.Utils.cancelAnimation(this.drawAnimationFrame);\n      delete this.drawAnimationFrame;\n    }\n\n    if (this.paused) {\n      return;\n    }\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.pause) {\n        plugin.pause();\n      }\n    }\n\n    if (!this.pageHidden) {\n      this.paused = true;\n    }\n  }\n\n  draw() {\n    this.drawAnimationFrame = Utils_1.Utils.animate(t => {\n      var _a;\n\n      return (_a = this.drawer) === null || _a === void 0 ? void 0 : _a.nextFrame(t);\n    });\n  }\n\n  getAnimationStatus() {\n    return !this.paused;\n  }\n\n  setNoise(noiseOrGenerator, init, update) {\n    if (!noiseOrGenerator) {\n      return;\n    }\n\n    if (typeof noiseOrGenerator === \"function\") {\n      this.noise.generate = noiseOrGenerator;\n\n      if (init) {\n        this.noise.init = init;\n      }\n\n      if (update) {\n        this.noise.update = update;\n      }\n    } else {\n      if (noiseOrGenerator.generate) {\n        this.noise.generate = noiseOrGenerator.generate;\n      }\n\n      if (noiseOrGenerator.init) {\n        this.noise.init = noiseOrGenerator.init;\n      }\n\n      if (noiseOrGenerator.update) {\n        this.noise.update = noiseOrGenerator.update;\n      }\n    }\n  }\n\n  densityAutoParticles() {\n    this.initDensityFactor();\n    const numberOptions = this.options.particles.number;\n    const optParticlesNumber = numberOptions.value;\n    const optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\n    const particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * this.density;\n    const particlesCount = this.particles.count;\n\n    if (particlesCount < particlesNumber) {\n      this.particles.push(Math.abs(particlesNumber - particlesCount));\n    } else if (particlesCount > particlesNumber) {\n      this.particles.removeQuantity(particlesCount - particlesNumber);\n    }\n  }\n\n  destroy() {\n    this.stop();\n    this.canvas.destroy();\n    delete this.interactivity;\n    delete this.options;\n    delete this.retina;\n    delete this.canvas;\n    delete this.particles;\n    delete this.bubble;\n    delete this.repulse;\n    delete this.attract;\n    delete this.drawer;\n    delete this.eventListeners;\n\n    for (const [, drawer] of this.drawers) {\n      if (drawer.destroy) {\n        drawer.destroy(this);\n      }\n    }\n\n    this.drawers = new Map();\n    this.destroyed = true;\n  }\n\n  exportImg(callback) {\n    this.exportImage(callback);\n  }\n\n  exportImage(callback, type, quality) {\n    var _a;\n\n    return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n  }\n\n  exportConfiguration() {\n    return JSON.stringify(this.options, undefined, 2);\n  }\n\n  refresh() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      this.stop();\n      yield this.start();\n    });\n  }\n\n  stop() {\n    if (!this.started) {\n      return;\n    }\n\n    this.started = false;\n    this.eventListeners.removeListeners();\n    this.pause();\n    this.particles.clear();\n    this.canvas.clear();\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.stop) {\n        plugin.stop();\n      }\n    }\n\n    this.plugins = new Map();\n    this.particles.linksColors = new Map();\n    delete this.particles.linksColor;\n  }\n\n  start() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (this.started) {\n        return;\n      }\n\n      yield this.init();\n      this.started = true;\n      this.eventListeners.addListeners();\n\n      for (const [, plugin] of this.plugins) {\n        if (plugin.startAsync !== undefined) {\n          yield plugin.startAsync();\n        } else if (plugin.start !== undefined) {\n          plugin.start();\n        }\n      }\n\n      this.play();\n    });\n  }\n\n  init() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      this.retina.init();\n      this.canvas.init();\n      const availablePlugins = Utils_1.Plugins.getAvailablePlugins(this);\n\n      for (const [id, plugin] of availablePlugins) {\n        this.plugins.set(id, plugin);\n      }\n\n      for (const [, drawer] of this.drawers) {\n        if (drawer.init) {\n          yield drawer.init(this);\n        }\n      }\n\n      for (const [, plugin] of this.plugins) {\n        if (plugin.init) {\n          plugin.init(this.options);\n        } else if (plugin.initAsync !== undefined) {\n          yield plugin.initAsync(this.options);\n        }\n      }\n\n      this.particles.init();\n      this.densityAutoParticles();\n    });\n  }\n\n  initDensityFactor() {\n    const densityOptions = this.options.particles.number.density;\n\n    if (!this.canvas.element || !densityOptions.enable) {\n      return;\n    }\n\n    const canvas = this.canvas.element;\n    const pxRatio = this.retina.pixelRatio;\n    this.density = canvas.width * canvas.height / (densityOptions.factor * pxRatio * densityOptions.area);\n  }\n\n}\n\nexports.Container = Container;","map":{"version":3,"sources":["D:/programs/web dev/facerecorgnitionbrain/node_modules/tsparticles/dist/Core/Container.js"],"names":["Object","defineProperty","exports","value","Container","tslib_1","require","Canvas_1","Particles_1","Retina_1","FrameManager_1","Options_1","Utils_1","constructor","id","sourceOptions","started","destroyed","paused","lastFrameTime","pageHidden","retina","Retina","canvas","Canvas","particles","Particles","drawer","FrameManager","noise","generate","angle","Math","random","PI","length","init","update","interactivity","mouse","clicking","inside","bubble","repulse","attract","plugins","Map","drawers","density","options","Options","presets","preset","load","Plugins","getPreset","shapes","getSupportedShapes","type","getShapeDrawer","set","eventListeners","EventListeners","play","force","needsUpdate","plugin","performance","now","draw","pause","drawAnimationFrame","undefined","Utils","cancelAnimation","animate","t","_a","nextFrame","getAnimationStatus","setNoise","noiseOrGenerator","densityAutoParticles","initDensityFactor","numberOptions","number","optParticlesNumber","optParticlesLimit","limit","particlesNumber","min","particlesCount","count","push","abs","removeQuantity","destroy","stop","exportImg","callback","exportImage","quality","element","toBlob","exportConfiguration","JSON","stringify","refresh","__awaiter","start","removeListeners","clear","linksColors","linksColor","addListeners","startAsync","availablePlugins","getAvailablePlugins","initAsync","densityOptions","enable","pxRatio","pixelRatio","width","height","factor","area"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Container = void 0;\nconst tslib_1 = require(\"tslib\");\nconst Canvas_1 = require(\"./Canvas\");\nconst Particles_1 = require(\"./Particles\");\nconst Retina_1 = require(\"./Retina\");\nconst FrameManager_1 = require(\"./FrameManager\");\nconst Options_1 = require(\"../Options/Classes/Options\");\nconst Utils_1 = require(\"../Utils\");\nclass Container {\n    constructor(id, sourceOptions, ...presets) {\n        this.id = id;\n        this.sourceOptions = sourceOptions;\n        this.started = false;\n        this.destroyed = false;\n        this.paused = true;\n        this.lastFrameTime = 0;\n        this.pageHidden = false;\n        this.retina = new Retina_1.Retina(this);\n        this.canvas = new Canvas_1.Canvas(this);\n        this.particles = new Particles_1.Particles(this);\n        this.drawer = new FrameManager_1.FrameManager(this);\n        this.noise = {\n            generate: () => {\n                return {\n                    angle: Math.random() * Math.PI * 2,\n                    length: Math.random(),\n                };\n            },\n            init: () => {\n            },\n            update: () => {\n            },\n        };\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.bubble = {};\n        this.repulse = { particles: [] };\n        this.attract = { particles: [] };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this.density = 1;\n        this.options = new Options_1.Options();\n        for (const preset of presets) {\n            this.options.load(Utils_1.Plugins.getPreset(preset));\n        }\n        const shapes = Utils_1.Plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = Utils_1.Plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        if (this.sourceOptions) {\n            this.options.load(this.sourceOptions);\n        }\n        this.eventListeners = new Utils_1.EventListeners(this);\n    }\n    play(force) {\n        const needsUpdate = this.paused || force;\n        if (this.paused) {\n            this.paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n            this.lastFrameTime = performance.now();\n        }\n        this.draw();\n    }\n    pause() {\n        if (this.drawAnimationFrame !== undefined) {\n            Utils_1.Utils.cancelAnimation(this.drawAnimationFrame);\n            delete this.drawAnimationFrame;\n        }\n        if (this.paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this.paused = true;\n        }\n    }\n    draw() {\n        this.drawAnimationFrame = Utils_1.Utils.animate((t) => { var _a; return (_a = this.drawer) === null || _a === void 0 ? void 0 : _a.nextFrame(t); });\n    }\n    getAnimationStatus() {\n        return !this.paused;\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!noiseOrGenerator) {\n            return;\n        }\n        if (typeof noiseOrGenerator === \"function\") {\n            this.noise.generate = noiseOrGenerator;\n            if (init) {\n                this.noise.init = init;\n            }\n            if (update) {\n                this.noise.update = update;\n            }\n        }\n        else {\n            if (noiseOrGenerator.generate) {\n                this.noise.generate = noiseOrGenerator.generate;\n            }\n            if (noiseOrGenerator.init) {\n                this.noise.init = noiseOrGenerator.init;\n            }\n            if (noiseOrGenerator.update) {\n                this.noise.update = noiseOrGenerator.update;\n            }\n        }\n    }\n    densityAutoParticles() {\n        this.initDensityFactor();\n        const numberOptions = this.options.particles.number;\n        const optParticlesNumber = numberOptions.value;\n        const optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\n        const particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * this.density;\n        const particlesCount = this.particles.count;\n        if (particlesCount < particlesNumber) {\n            this.particles.push(Math.abs(particlesNumber - particlesCount));\n        }\n        else if (particlesCount > particlesNumber) {\n            this.particles.removeQuantity(particlesCount - particlesNumber);\n        }\n    }\n    destroy() {\n        this.stop();\n        this.canvas.destroy();\n        delete this.interactivity;\n        delete this.options;\n        delete this.retina;\n        delete this.canvas;\n        delete this.particles;\n        delete this.bubble;\n        delete this.repulse;\n        delete this.attract;\n        delete this.drawer;\n        delete this.eventListeners;\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        this.drawers = new Map();\n        this.destroyed = true;\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    exportImage(callback, type, quality) {\n        var _a;\n        return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.options, undefined, 2);\n    }\n    refresh() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            this.stop();\n            yield this.start();\n        });\n    }\n    stop() {\n        if (!this.started) {\n            return;\n        }\n        this.started = false;\n        this.eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.clear();\n        for (const [, plugin] of this.plugins) {\n            if (plugin.stop) {\n                plugin.stop();\n            }\n        }\n        this.plugins = new Map();\n        this.particles.linksColors = new Map();\n        delete this.particles.linksColor;\n    }\n    start() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (this.started) {\n                return;\n            }\n            yield this.init();\n            this.started = true;\n            this.eventListeners.addListeners();\n            for (const [, plugin] of this.plugins) {\n                if (plugin.startAsync !== undefined) {\n                    yield plugin.startAsync();\n                }\n                else if (plugin.start !== undefined) {\n                    plugin.start();\n                }\n            }\n            this.play();\n        });\n    }\n    init() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            this.retina.init();\n            this.canvas.init();\n            const availablePlugins = Utils_1.Plugins.getAvailablePlugins(this);\n            for (const [id, plugin] of availablePlugins) {\n                this.plugins.set(id, plugin);\n            }\n            for (const [, drawer] of this.drawers) {\n                if (drawer.init) {\n                    yield drawer.init(this);\n                }\n            }\n            for (const [, plugin] of this.plugins) {\n                if (plugin.init) {\n                    plugin.init(this.options);\n                }\n                else if (plugin.initAsync !== undefined) {\n                    yield plugin.initAsync(this.options);\n                }\n            }\n            this.particles.init();\n            this.densityAutoParticles();\n        });\n    }\n    initDensityFactor() {\n        const densityOptions = this.options.particles.number.density;\n        if (!this.canvas.element || !densityOptions.enable) {\n            return;\n        }\n        const canvas = this.canvas.element;\n        const pxRatio = this.retina.pixelRatio;\n        this.density = (canvas.width * canvas.height) / (densityOptions.factor * pxRatio * densityOptions.area);\n    }\n}\nexports.Container = Container;\n"]},"metadata":{},"sourceType":"script"}